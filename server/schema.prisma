// database
datasource db {
  provider = "sqlite"
  url      = "file:database.db"
}

// generator
generator client {
  provider             = "prisma-client-py"
  interface = "sync"
  recursive_type_depth = 5
}

// data models
model Post {
  id        String     @id
  content   String
  creation_date Int
  author_username String
  deleted Boolean? @default(false)
  origin String
  post_revisions PostRevision[]
}

model PostRevision {
  id BigInt @id
  post Post @relation(fields: [postId], references: [id])
  postId String
  edit String?
}

model User {
  username String
  uuid String @id
  creation_date BigInt
  last_seen BigInt? @default(0)
  password String
  token String
  quote String?
  pfp String
  permissions BigInt? @default(0)
  banned Boolean? @default(false)
  extra_flags String?
  chats ChatMember[]
}

model Relation {
  id BigInt @id @default(autoincrement())
  from_user String
  to_user String
  state Int
  updated_at BigInt
}

model AuditLog {
  id BigInt @id @default(autoincrement())
  by String
  action String
  to String?
  details String?
}

model Chat {
  chatuuid String @id
  name String
  author String
  members ChatMember[]
}

model ChatMember {
  id BigInt @id @default(autoincrement())
  chat Chat @relation(fields: [chatId], references: [chatuuid])
  chatId String
  user User @relation(fields: [userId], references: [uuid])
  userId String
}

model Report {
  id BigInt @id @default(autoincrement())
  from_user String
  to_user String
  reason String
  details String?
}

model NetBlock {
  id Int @id @default(autoincrement())
  to_ip String
  type Int
}